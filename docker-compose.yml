# Football Reserve TN - Development Environment
# Docker Compose configuration for local development

version: '3.8'

services:
  # ================================
  # PostgreSQL Database
  # ================================
  postgres:
    image: postgres:15-alpine
    container_name: football-reserve-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: football_reserve
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - football-reserve-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # ================================
  # Redis Cache (Optional)
  # ================================
  redis:
    image: redis:7-alpine
    container_name: football-reserve-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - football-reserve-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # ================================
  # Next.js Application
  # ================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: football-reserve-app
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/football_reserve
      - NEXTAUTH_SECRET=dev-secret-key-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - football-reserve-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # ================================
  # Prisma Studio (Database GUI)
  # ================================
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
      target: dependencies
    container_name: football-reserve-prisma-studio
    restart: unless-stopped
    ports:
      - '5555:5555'
    environment:
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/football_reserve
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - football-reserve-network
    volumes:
      - .:/app
    working_dir: /app
    command: npx prisma studio --hostname 0.0.0.0

networks:
  football-reserve-network:
    driver: bridge
